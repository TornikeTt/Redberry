{"version":3,"sources":["components/StartPage/StartPage.js","components/Pages/Identification/NameValidation.js","components/Pages/Identification/LastNameValidation.js","components/Pages/Identification/EmailValidation.js","components/Pages/Identification/Identification.js","components/Pages/QuestionnaireOnCOVID/SecondQuestions.js","components/Pages/QuestionnaireOnCOVID/ThirdQuestions.js","components/Pages/QuestionnaireOnCOVID/AboutCOVID.js","components/Pages/QuestionnaireOnVaccine/AboutVaccine.js","components/Pages/Recommendation/Recommendation.js","components/Pages/Pages.js","components/Finish/Finish.js","App.js","index.js"],"names":["StartPage","props","Control","SetControl","useState","showText","setShowText","Main_Logo_style","useSpring","delay","config","duration","from","y","width","height","borderRadius","to","onRest","buttonStyle","pause","opacity","className","img","src","alt","style","button","onClick","NameValidation","NameError","setNameError","NameStatus","setNameStatus","Name_input_Style_Hendler","borderStyle","borderColor","borderWidth","for","type","id","placeholder","onChange","e","nameValue","target","value","nameValueLengt","split","length","nameAnswer","test","autoComplete","LastNameValidation","lastName_Error","setLastName_Error","lastName_Status","setLastName_Status","lastName_input_Style_Hendler","lastName_Value","lastName_Value_Length","lastName_Answer","EmailValidation","EmailError","setEmailError","EmailStatus","setEmailStatus","Email_input_Style_Hendler","EmailValue","Email_Value_Length","EmailAnswer","console","log","Identification","setNextPage","SecondQuestions","Second_Questions","setSecond_Questions","name","ThirdQuestions","Third_Questions","TestDate_Error","setThird_Questions","setTestDate_Error","antibodies_Error","setAntibodies_Error","setThird_1_Questions_Status","setThird_2_Question_Status","date","data_Value","data_Value_length","Answer","antibodies_Value","antibodies_Value_length","antibodies_Answer","AboutCOVID","FirstQuestion_Status","setFirstQuestion_Status","Third_1_Questions_Status","Third_2_Question_Status","AboutVaccine","showSecond_Questions","setShow_Questions","Status","setStatus","add_Question_Part","href","Second_Questions_hendler","Third_Question_Hendler","Recommendation","Recommendation_1_Status","SetRecommendation_1_Status","Recommendation_2_Status","SetRecommendation_2_Status","preventDefault","Pages","page","setPage","nextPage","title","Finish","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.407aeace.chunk.js","sourcesContent":["import React , {useState} from \"react\";\nimport { useSpring , animated } from \"react-spring\";\n\nconst StartPage = (props) => { \n    const { Control , SetControl } = props\n    const [ showText, setShowText ] = useState(false);\n    \n    const Main_Logo_style = useSpring( { \n        delay: 1000,\n        config: { \n            duration: 1500,\n        },\n        \n        from: { \n            y: 0,\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: \"0%\",\n        },\n\n        to: { \n            width: \"7%\",\n            height: \"13%\",\n            borderRadius: \"50%\",\n            y: -100,\n        },\n        onRest: () => setShowText(true)\n    });\n\n    const buttonStyle = useSpring( { \n        /* \n            1. when \"Main_Logo_style\" working \"showText\" is false which means\n            \"pause\" return true, so button animation doesn't start.\n\n            2. when \"Main_Logo_style\" stop, it's will change \"showText\" state\n            from false to true, after that \"pause\" return false, that means\n            animation start and button will appear.\n        */\n        pause: showText ? false : true,\n        config: { \n            duration: 1000,\n        },\n        from: {opacity: 0 ,y: -100},\n        to: {opacity: 1, y: -70},\n    })\n\n    return ( \n        <div className=\"StartPage\">\n            <animated.img \n                src= { \n                    showText ? \n                        \"images/StartPage Logo.png\" : \n                        \"images/StartPage image.png\"\n                }\n                alt=\"logo\" \n                style={Main_Logo_style}\n            />\n\n            { \n                showText \n                    && \n                <animated.button\n                    style={buttonStyle}\n                    onClick={() => SetControl(\"PAGES\")}\n                >\n                    კითხვარის დაწყება \n                </animated.button> \n            }\n\n        </div>\n    );\n}\n\n\n\nexport default StartPage\n","const NameValidation = (props) => {\r\n    const { NameError ,setNameError , NameStatus, setNameStatus } = props\r\n\r\n    const Name_Identification_Hendler = (e) => { \r\n        let nameValue = e.target.value // take name field value\r\n        let nameValueLengt = nameValue.split(\"\").length // Check how many letters\r\n\r\n        /*  nameTest and nameAnswer variables working\r\n            * every time when user typing somthing in the name field \r\n                Regular Expression pattern check if there are digit or symbols\r\n            * if there are symbols or digit \"nameAnswer\" return true \r\n                which mean that The user is failed to verify\r\n            * so if nameAnswer return false that mean we have only letters in\r\n                the name input field\r\n        */ \r\n\r\n        let nameTest = /(\\d|[~`!@#£€$¢¥§%°^&*()\\-_+={}[\\]|\\\\/:;\"'<>,.?])/gi\r\n        let nameAnswer = nameTest.test(nameValue);\r\n        \r\n        \r\n        if ( nameValueLengt <= 0 ) { \r\n            setNameError(\"სახელის ველის შევსება სავალდებულოა \")\r\n        } else if (nameValueLengt > 255) { \r\n            setNameError(\"სახელის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\")\r\n            setNameStatus(false)\r\n        } else { \r\n            if( nameAnswer === true ) { \r\n                setNameError(\"სახელის ველი უნდა შეიცავდეს მხოლოდ  ალფაბეტის სიმბოლოებს\")\r\n                setNameStatus(false);\r\n            } else if( nameValueLengt <= 2) { \r\n                setNameError(\"სახელის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოგან\")\r\n                setNameStatus(false)\r\n            } else if( nameValueLengt >= 3) { \r\n                setNameError(\"\")\r\n                setNameStatus(true)\r\n            } \r\n        }\r\n    }\r\n\r\n\r\n    const Name_input_Style_Hendler = () => { \r\n        switch(NameStatus) { \r\n            case \"\":\r\n                return \"\"\r\n                break;\r\n            case false: \r\n                return { \r\n                    style: { \r\n                        borderStyle: \"solid\",\r\n                        borderColor: \"hsl(0, 100%, 74%)\",\r\n                        borderWidth: 2,\r\n                    },\r\n                    img : <img src=\"./images/error.png\" alt=\"error icone\" />\r\n                }\r\n                break;\r\n            case true: \r\n                return {\r\n                    style: { \r\n                        borderStyle: \"solid\",\r\n                        borderColor: \"lime\",\r\n                        borderWidth: 2,\r\n                    },\r\n                    img: <img src=\"./images/accept.png\" alt=\"accept icone\" />\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    return ( \r\n    <>\r\n        <label for=\"name\">სახელი*</label>\r\n        <div className=\"div_name\">\r\n            <input \r\n                style = {Name_input_Style_Hendler().style}\r\n                type=\"text\" \r\n                id=\"name\" \r\n                placeholder=\"იოსებ\" \r\n                onChange={Name_Identification_Hendler}\r\n                autoComplete=\"off\"\r\n            />\r\n            {Name_input_Style_Hendler().img}\r\n        </div>\r\n        <p> { NameError } </p>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NameValidation\r\n","const LastNameValidation = (props) => { \n    const { \n        lastName_Error , \n        setLastName_Error , \n        lastName_Status , \n        setLastName_Status \n    } = props\n\n    const lastName_Identification_Hendler = (e) => { \n        let lastName_Value = e.target.value // take lastname field value \n        // Check how many letters\n        let lastName_Value_Length = lastName_Value.split(\"\").length         \n\n        /*  lastName_Test  and lastName_Answer variables working\n            * every time when user typing somthing in the lastname field \n                Regular Expression pattern check if there are digit or symbols\n            * if there are symbols or digit \"lastName_Answer\" return true \n                which mean that The user is failed to verify\n            * so if \"lastName_Answer\" return false that mean we have only\n                letters in the lastname input field\n        */ \n\n        let lastName_Test = /(\\d|[~`!@#£€$¢¥§%°^&*()\\-_+={}[\\]|\\\\/:;\"'<>,.?])/gi\n        let lastName_Answer = lastName_Test.test(lastName_Value);\n\n        if( lastName_Value_Length <= 0 ) { \n            setLastName_Error(\"გვარის ველის შევსება სავალდებულოა \")\n        } else if( lastName_Value_Length > 225 ) { \n            setLastName_Error(\"გვარის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\")\n            setLastName_Status(false)\n        } else { \n            if( lastName_Answer === true ) { \n                setLastName_Error(\"გვარის ველი უნდა შეიცავდეს მხოლოდ  ალფაბეტის სიმბოლოებს\")\n                setLastName_Status(false);\n            } else if( lastName_Value_Length <= 2) { \n                setLastName_Error(\"გვარის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოგან\")\n                setLastName_Status(false)\n            } else if( lastName_Value_Length >= 3) { \n                setLastName_Error(\"\")\n                setLastName_Status(true)\n            } \n        }\n    }\n\n    const lastName_input_Style_Hendler = () => { \n        switch(lastName_Status) { \n            case \"\":\n                return \"\"\n            case false: \n                return { \n                    style: { \n                        borderStyle: \"solid\",\n                        borderColor: \"hsl(0, 100%, 74%)\",\n                        borderWidth: 2,\n                    },\n                    img : <img src=\"./images/error.png\" alt=\"error icone\" />\n                }\n            case true: \n                return {\n                    style: { \n                        borderStyle: \"solid\",\n                        borderColor: \"lime\",\n                        borderWidth: 2,\n                    },\n                    img: <img src=\"./images/accept.png\" alt=\"accept icone\" />\n                }\n        }\n    }\n\n    return ( \n        <>\n            <label for=\"lastName\"> გვარი*</label>\n            <div className=\"div_lastName\">\n                <input \n                    style = {lastName_input_Style_Hendler().style}\n                    type=\"text\" \n                    id=\"lastName\" \n                    placeholder=\"ჯუღაშვილი\" \n                    onChange = {lastName_Identification_Hendler}\n                    autoComplete=\"off\"\n                />\n                { lastName_input_Style_Hendler().img }\n            </div>\n            <p> {lastName_Error} </p>\n        </>\n    )\n}\n\n\nexport default LastNameValidation\n","const EmailValidation = (props) => { \n    const { \n        EmailError,\n        setEmailError,\n        EmailStatus,\n        setEmailStatus,\n    } = props\n\n    const Email_Identification_Hendler = (e)  => { \n        let EmailValue = e.target.value;\n        let Email_Value_Length = EmailValue.split(\"\").length\n\n\n        let EmailTest = /([-!#-'*+/-8=?A-Z^-~]+(\\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\")(@redberry.ge)/\n        let EmailAnswer = EmailTest.test(EmailValue);\n\n        console.log(EmailAnswer)\n        if ( EmailAnswer === false ) { \n            setEmailError(\"თქვენს მიერ შეყვანილი მეილი არასწორია\" +\n            \" გთხოვთ დარეგისტრირდეთ რედბერის მეილით (youremail@redberry.ge) \");\n            setEmailStatus(false);\n        } else if( EmailAnswer === true ) { \n            setEmailError(\"\");\n            setEmailStatus(true);\n        }\n\n        if( Email_Value_Length <= 0) { \n            setEmailError(\"მეილის ველის შევსება სავალდებულოა\");\n            setEmailStatus(false);\n        }\n    };\n\n    const Email_input_Style_Hendler = () => { \n        switch(EmailStatus) { \n            case \"\":\n                return \"\"\n            case false: \n                return { \n                    style: { \n                        borderStyle: \"solid\",\n                        borderColor: \"hsl(0, 100%, 74%)\",\n                        borderWidth: 2,\n                    },\n                    img : <img src=\"./images/error.png\" alt=\"error icone\" />\n                }\n            case true: \n                return {\n                    style: { \n                        borderStyle: \"solid\",\n                        borderColor: \"lime\",\n                        borderWidth: 2,\n                    },\n                    img: <img src=\"./images/accept.png\" alt=\"accept icone\" />\n                }\n        }\n    }\n    return ( \n        <>\n            <label for=\"email\"> ემაილი*</label>\n            <div className=\"div_input\">\n                <input \n                    style = {Email_input_Style_Hendler().style}\n                    type=\"email\" \n                    id=\"email\" \n                    placeholder=\"fb@redberry.ge\"\n                    onChange = { Email_Identification_Hendler }\n                    autoComplete=\"off\"\n                />\n                {Email_input_Style_Hendler().img}\n            </div>\n            <p> {EmailError} </p>\n        </>\n    )\n}\n\nexport default EmailValidation\n","import React, { useState } from \"react\";\nimport NameValidation from \"./NameValidation\";\nimport LastNameValidation from \"./LastNameValidation\";\nimport EmailValidation from \"./EmailValidation\";\n\nconst Identification = (props) => {\n    // name validation --------------- START\n    const [ NameError , setNameError ] = useState(\"\") // use for error message\n    const [ NameStatus , setNameStatus] = useState(\"\");\n    // name validation --------------- END\n\n    // lastName validation --------------- START\n    const [ lastName_Error , setLastName_Error ] = useState(\"\")  // use for error message\n    const [ lastName_Status , setLastName_Status] = useState(\"\");\n    // lastName validation --------------- END\n\n    // Email validation --------- START\n    const [ EmailError , setEmailError ] = useState(\"\");\n    const [ EmailStatus , setEmailStatus ] = useState(\"\");\n    // Email validation ------- END\n\n    if(EmailStatus === true && lastName_Status === true && NameStatus === true) {\n        props.setNextPage(true);\n    } else {\n        props.setNextPage(false);\n    }\n\n    return (\n        <main className=\"identification_Main\">\n            <div className=\"leftSide\">\n                <form>\n                    <NameValidation\n                        NameError = { NameError }\n                        setNameError = { setNameError }\n                        NameStatus = { NameStatus }\n                        setNameStatus = { setNameStatus }\n                    />\n\n                    <LastNameValidation\n                        lastName_Error = { lastName_Error }\n                        setLastName_Error = { setLastName_Error }\n                        lastName_Status = { lastName_Status }\n                        setLastName_Status = { setLastName_Status }\n                    />\n\n                    <EmailValidation\n                        EmailError = { EmailError }\n                        setEmailError = { setEmailError }\n                        EmailStatus = { EmailStatus }\n                        setEmailStatus = { setEmailStatus }\n                    />\n                </form>\n\n                <div className=\"note\">\n                    <hr />\n                    <p> *-ით მონიშნული ველების შევსება სავალდებულოა</p>\n                </div>\n            </div>\n\n            <div className=\"rightSide\">\n                <img\n                    src=\"images/SecondPage Image.png\"\n                    alt=\"two person image in second page\"\n                />\n            </div>\n        </main>\n    )\n}\n\n\nexport default Identification\n","const SecondQuestions = (props) => { \n    const { \n        Second_Questions,\n        setSecond_Questions,\n    } = props\n\n    if(Second_Questions === 1) { \n        return ( \n            <>\n                <h4> შემთხვევით ანტისხეულების \n                    ტესტი ხომ არ გაქვს გაკეთებული?* \n                </h4> \n                <fieldset>\n                    <div>\n                        <input \n                            type=\"radio\" \n                            name=\"SecondRadio\"  \n                            id=\"Second_yes\" \n                            value=\"Second_Yes\"\n                        />\n                        <label for=\"Second_yes\">კი</label>\n                    </div>\n                    <div>\n                        <input \n                            type=\"radio\" \n                            name=\"SecondRadio\" \n                            id=\"Second_no\" \n                            value=\"Second_No\" \n                        />\n                        <label for=\"Second_no\">არა</label>\n                    </div>\n                </fieldset>\n            </>\n        )\n    } else { \n        return \"\"\n    }\n}\n\nexport default SecondQuestions\n","const ThirdQuestions = (props) => { \n    const { \n        Third_Questions,\n        setThird_Questions,\n        TestDate_Error,\n        setTestDate_Error,\n        antibodies_Error,\n        setAntibodies_Error,\n        setThird_1_Questions_Status,\n        setThird_2_Question_Status,\n    } = props\n\n    // date function we use to check if user fill input data correctly\n    const date = (e) => { \n        let data_Value = e.target.value\n        let data_Value_length = data_Value.split(\"\").length\n\n        let Test = /^\\d{2,4}-\\d{2}-\\d{2}$/gi\n        let Answer = Test.test(data_Value)\n        \n        if( data_Value_length > 0 ) { \n            if ( Answer === true )  { \n                setTestDate_Error(\"\")\n                setThird_1_Questions_Status(true) // This means that the user is verified \n            } else if ( Answer === false ) { \n                setTestDate_Error(\"ფორმატი აუცილებლად უნდა იყოს Date\")\n                setThird_1_Questions_Status(false)\n            } \n        } else { \n            setTestDate_Error(\"თარიღის შეყვანა სავალდებულოა\")\n            setThird_1_Questions_Status(false)\n        }\n    }\n\n\n    // antibodies_Check function use for to check if antibodies input is correctly\n    let antibodies_Check = (e) => { \n        let antibodies_Value = e.target.value\n        let antibodies_Value_length = antibodies_Value.split(\"\").length\n        let antibodies_Test = /^\\d*$/gi\n        let antibodies_Answer = antibodies_Test.test(antibodies_Value)\n\n       if( antibodies_Value_length > 0 ) { \n           if( antibodies_Answer === true ) { \n                setAntibodies_Error(\"\")\n                setThird_2_Question_Status(true) // This means that the user is verified \n            } else if(antibodies_Answer === false ) { \n                setAntibodies_Error(\"მნიშვნელობა აუცილებლად უნდა\" +\n                \"იყოს Number: შეიყვანეთ რიცხვითი მნიშნელობა\")\n                setThird_2_Question_Status(false)\n            }\n       } else { \n            setAntibodies_Error(\"ანტისხეულების რაოდენობის შეყვანა სავალდებულოა\")\n            setThird_2_Question_Status(false)\n       }\n    }\n\n   if( Third_Questions === 1.1)  { \n        return ( \n            <>\n                <h4> თუ გახსოვს, გთხოვ მიუთითე \n                    მიახლოებითი თარიღი და რაოდენობა ანტისხეულების \n                </h4> \n                <fieldset>\n                    <div>\n                        <input \n                            className=\"take\"\n                            type=\"date\" \n                            name=\"date_of_test\"  \n                            placeholder=\"რიცხვი\"\n                            onChange={date}\n                        />\n                        <p> {TestDate_Error} </p>\n                    </div>\n                    <div>\n                        <input \n                            className=\"take\"\n                            type=\"number\" \n                            name=\"antibodies\" \n                            placeholder=\"ანტისხეულების რაოდენობა\"\n                            onChange  = { antibodies_Check }\n                        />\n                        <p> { antibodies_Error } </p>\n                    </div>\n                </fieldset>\n            </>\n        )\n       } else if( Third_Questions === 1.2 ) { \n            return ( \n                <>\n                    <h4>მიუთითე მიახლოებითი პერიოდი (დღე/თვე/წელი), \n                        როდის გქონდა კოვიდ19 </h4> \n                    <fieldset>\n                        <input \n                            className=\"take\"\n                            type=\"date\" \n                            name=\"Secondradio\"  \n                            placeholder=\"(დღე/თვე/წელი)\"\n                            onChange = { date }\n                        />\n                    </fieldset>\n                    <p> { TestDate_Error } </p>\n                </>\n            )\n       } else { \n            return \"\"\n       }\n}\n\n\nexport default ThirdQuestions\n","import React, {useState} from \"react\";\nimport SecondQuestions from \"./SecondQuestions\";\nimport ThirdQuestions from \"./ThirdQuestions\";\n\nconst AboutCOVID = (props) => {\n    // The second set of questions   ----------------- START\n    const [ Second_Questions , setSecond_Questions] = useState(\"\");\n    // The second set of questions   ----------------- END\n\n    // The third set of questions ------------------- START\n    const [ Third_Questions , setThird_Questions ] = useState(\"\");\n    const [ TestDate_Error , setTestDate_Error ] = useState(\"\")\n    const [ antibodies_Error , setAntibodies_Error ] = useState(\"\")\n    // The third set of questions ------------------- END\n\n    const [ FirstQuestion_Status, setFirstQuestion_Status ] = useState(false)\n    const [ Third_1_Questions_Status , setThird_1_Questions_Status ] = useState(false)\n    const [ Third_2_Question_Status, setThird_2_Question_Status ] = useState(false)\n\n    if( FirstQuestion_Status === true ||\n        Third_1_Questions_Status === true && Third_2_Question_Status === true ||\n        Third_Questions === 1.2 && Third_1_Questions_Status === true ) {\n        props.setNextPage(true)\n    } else {\n        props.setNextPage(false)\n    }\n\n    const Questions_Hendler = (e) => {\n        let value = e.target.value;\n        switch(value) {\n            case \"yes\":\n                setSecond_Questions(1); // show Second Questions\n\n                //if use choose \"yes\" next page button not working\n                setFirstQuestion_Status(false)\n                setThird_1_Questions_Status(false)\n                setThird_2_Question_Status(false)\n                //if use choose \"yes\" next page button not working\n                break;\n            case \"no\":\n                setSecond_Questions(2) // show Nothing\n                setThird_Questions(\"\") // dont show Third part Questions when\n                // user will choose \"no\"\n                setTestDate_Error(\"\") // if user after take message Error in\n                // Third part Questions, will choose \"no\" the message will be\n                // delete\n                setFirstQuestion_Status(true) // if user choose \"no\" next page\n                // button is will working\n                break;\n            case \"HaveItNow\":\n                setSecond_Questions(3) // show Nothing\n                setThird_Questions(\"\") // don't show Third part Questions when\n                // use will choose \"have it now\"\n                setTestDate_Error(\"\") // if user after take message Error in\n                // Third part Questions, will choose \"have it now\" the\n                // message will be delete\n                setFirstQuestion_Status(true) // if use choose \"have it now\"\n                // next page button will working\n                break;\n            case \"Second_Yes\":\n                setThird_Questions(1.1) // show Third Questions\n                setTestDate_Error(\"\") // restart every time\n                setAntibodies_Error(\"\") // restart every time\n                // default user can't go next page before fill all input\n                setThird_1_Questions_Status(false)\n                setThird_2_Question_Status(false)\n                // default user can't go next page before fill all input\n                break;\n            case \"Second_No\":\n                setThird_Questions(1.2) // show Third Questions another options\n                setTestDate_Error(\"\") // restart every time\n\n                // default user can't go next page before fill all input\n                setThird_1_Questions_Status(false)\n                setThird_2_Question_Status(false)\n                // default user can't go next page before fill all input\n                break;\n        }\n    }\n\n    return (\n        <div className=\"aboutCovid\">\n            <form className=\"aboutCovid_Questions\" onChange={Questions_Hendler}>\n                <h4> გქვს გადატანილი Covid-19?* </h4>\n                <fieldset>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            name=\"radio\"\n                            id=\"yes\"\n                            value=\"yes\" />\n                        <label for=\"yes\">კი</label>\n                    </div>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            name=\"radio\"\n                            id=\"no\"\n                            value=\"no\" />\n                        <label for=\"no\" >არა</label>\n                    </div>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            name=\"radio\"\n                            id=\"other\"\n                            value=\"HaveItNow\" />\n                        <label for=\"other\">ახლა მაქვს</label>\n                    </div>\n                </fieldset>\n\n                <SecondQuestions\n                    Second_Questions = { Second_Questions }\n                    setSecond_Questions = { setSecond_Questions }\n                />\n\n                <ThirdQuestions\n                    Third_Questions = { Third_Questions }\n                    setThird_Questions = { setThird_Questions }\n                    TestDate_Error = { TestDate_Error }\n                    setTestDate_Error = { setTestDate_Error }\n                    antibodies_Error = { antibodies_Error }\n                    setAntibodies_Error = { setAntibodies_Error }\n                    setThird_1_Questions_Status = { setThird_1_Questions_Status }\n                    setThird_2_Question_Status = { setThird_2_Question_Status }\n                />\n            </form>\n\n            <div className=\"aboutCovid_Image\">\n                <img src=\"images/aboutCovidImage.png\" alt=\"cold man image\" />\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AboutCOVID\n","import React , {useState} from \"react\"\n\nconst AboutVaccine = (props) => {\n    const [ showSecond_Questions , setShow_Questions ] = useState(\"\")\n    const [ Status , setStatus ] = useState(false)\n\n    const Questions_Hendler = (e) => {\n        let value = e.target.value;\n        switch(value) {\n            case \"yes\":\n                setShow_Questions(1)\n                setStatus(false)\n                break;\n            case \"no\":\n                setShow_Questions(2)\n                setStatus(false)\n                break;\n            case \"1.1\":\n                setShow_Questions(1)\n                setStatus(true)\n                break;\n            case \"1.2\":\n                setShow_Questions(1)\n                setStatus(true)\n                break;\n            case \"1.3\":\n                setShow_Questions(1.3)\n                setStatus(true)\n                break;\n            case \"2.1\":\n                setStatus(true)\n                break;\n            case \"2.2\":\n                setStatus(true)\n                break;\n            case \"2.3\":\n                setShow_Questions(2.3)\n                setStatus(true)\n                break;\n        }\n    }\n\n\n    if( Status === true) {\n        props.setNextPage(true)\n    } else {\n        props.setNextPage(false)\n    }\n\n    const add_Question_Part = () => {\n        if ( showSecond_Questions === 1.3 ) {\n            return (\n                <div className=\"addThirdPart\">\n                    <p>რომ აღარ გადადო, <br/>ბარემ ეხლავე დარეგისტრირდი </p>\n                    <a href=\"https://booking.moh.gov.ge\">\n                        https://booking.moh.gov.ge/  </a>\n                </div>\n            )\n        } else if(showSecond_Questions === 2.3 ) {\n            return (\n                <div className=\"addThirdPart\">\n                    <p>ახალი პროტოკოლით კოვიდის\n                    გადატანიდან 1 თვის შემდეგ შეგიძლიათ ვაქცინის გაკეთება.</p>\n                    <br/>\n                    <p> რეგისტრაციის ლინკი  </p>\n                    <a href=\"https://booking.moh.gov.ge\">\n                        [https://booking.moh.gov.ge/]  </a>\n                </div>\n            )\n        }\n    }\n\n    // Second Questions  ------------ START\n    const Second_Questions_hendler = () => {\n        if ( showSecond_Questions === 1 || showSecond_Questions === 1.3) {\n           return (\n               <>\n                <h4> აირჩიე რომელ ეტაპზე ხარ*</h4>\n                <fieldset>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"start\"\n                            name=\"Secondradio\"\n                            value=\"1.1\" />\n                        <label for=\"start\">პირველი დოზა და\n                        დარეგისტრირებული ვარ მეორეზე</label>\n                    </div>\n\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"done\"\n                            name=\"Secondradio\"\n                            value=\"1.2\" />\n                        <label for=\"done\">სრულად ვაქცინირებული ვარ</label>\n                    </div>\n\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"Process\"\n                            name=\"Secondradio\"\n                            value=\"1.3\" />\n                        <label for=\"Process\">პირველი დოზა და არ\n                        დავრეგისტრირებულვარ მეორეზე</label>\n                    </div>\n                </fieldset>\n                   {add_Question_Part()}\n               </>\n           )\n        }\n    }\n    // Second Questions  ------------- END\n\n    const Third_Question_Hendler = () => {\n        if(showSecond_Questions === 2 || showSecond_Questions === 2.3)  {\n            return (\n                <>\n                <h4> რას ელოდები?*</h4>\n                <fieldset>\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"registration\"\n                            name=\"thirdRadio\"\n                            value=\"2.1\" />\n                        <label for=\"registration\">დარეგისტრირებული ვარ და\n                        ველოდები თარიღს</label>\n                    </div>\n\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"noWay\"\n                            name=\"thirdRadio\"\n                            value=\"2.2\" />\n                        <label for=\"noWay\">არ ვგეგმავ</label>\n                    </div>\n\n                    <div>\n                        <input\n                            type=\"radio\"\n                            id=\"goingto\"\n                            name=\"thirdRadio\"\n                            value=\"2.3\" />\n                        <label for=\"goingto\">გადატანილი მაქვს და ვგეგმავ აცრას</label>\n                    </div>\n                </fieldset>\n                    {add_Question_Part()}\n                </>\n            )\n        }\n    }\n\n\n    return (\n        <div className=\"AboutVaccine\">\n            <form className=\"AboutVaccine_Questions\" onChange={Questions_Hendler}>\n                <h4> უკვე აცრილი ხარ?*</h4>\n                <fieldset>\n                    <div>\n                        <input type=\"radio\" id=\"yes\" name=\"radio\" value=\"yes\"/>\n                        <label for=\"yes\">კი</label>\n                    </div>\n\n                    <div>\n                        <input type=\"radio\" id=\"no\" name=\"radio\" value=\"no\" />\n                        <label for=\"no\">არა</label>\n                    </div>\n                </fieldset>\n                { Second_Questions_hendler() }\n                { Third_Question_Hendler() }\n            </form>\n\n            <div className=\"AboutVaccine_Image\">\n                <img src=\"images/doctor.png\" alt=\"doctor image\" />\n            </div>\n\n        </div>\n    );\n};\n\n\n\nexport default AboutVaccine\n","import React, {useState} from \"react\";\n\nconst Recommendation = ({SetControl}) => { \n    const [ Recommendation_1_Status , SetRecommendation_1_Status ] = useState(false);\n    const [ Recommendation_2_Status, SetRecommendation_2_Status] = useState(false);\n\n    const Questions_Hendler = (e) => { \n        let value = e.target.value\n        switch(value) { \n            case \"OnceWeek\":\n            case \"twiceWeek\":\n            case \"Fortnightly\":\n            case \"onceMonth\":\n                SetRecommendation_1_Status(true)\n                break;\n            case \"zero\":\n            case \"one\":\n            case \"two\":\n            case \"three\":\n            case \"four\":\n            case \"five\":\n                SetRecommendation_2_Status(true)\n                break;\n        }\n    }\n\n    \n    const sub = (e) => { \n        e.preventDefault();\n\n        if( Recommendation_1_Status === true && Recommendation_2_Status === true) { \n           SetControl(\"Finish\") \n        }\n    }\n\n\n\n    return ( \n        <div className=\"Recommendation\">\n\n            <div className=\"Recommendation_Questions\">\n                <p> რედბერის მთავარი ღირებულება ჩვენი გუნდის თითოეული წევრია. \n                    გარემო, რომელსაც ჩვენი თანამშრომლები ქმნით \n                    ბევრისთვის არის და ყოფილა წლების განმავლობაში ერთად \n                    მიზნებისთვის ბრძოლის მიზეზი, \n                    ბევრისთვის კი - ჩვენთან გადმოსვლის.\n                </p>\n                <br />\n\n                <p>პანდემიის პერიოდში ერთმანეთსაც იშვიათად ვნახულობთ \n                    პირისპირ და ყოველდღიური კომუნიკაციაც გაიშვიათდა.</p> \n\n                <form onChange={Questions_Hendler}>\n                    <h4> რა სიხშირით შეიძლება გვქონდეს საერთო არაფორმალური \n                        ონლაინ შეხვედრები, სადაც ყველა სურვილისამებრ \n                        ჩაერთვება?*</h4>\n\n                    <fieldset>\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radio\" \n                                id=\"OnceWeek\"\n                                value=\"OnceWeek\"\n                            />\n                            <label for=\"OnceWeek\">კვირაში ერთხელ</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radio\" \n                                id=\"twiceWeek\" \n                                value=\"twiceWeek\"\n                            />\n                            <label for=\"twiceWeek\">კვირაში ორჯერ</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radio\" \n                                id=\"Fortnightly\"\n                                value=\"Fortnightly\"\n                            />\n                            <label for=\"Fortnightly\">ორ კვირაში ერთხელ</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radio\" \n                                id=\"onceMonth\"\n                                value=\"onceMonth\"\n                            />\n                            <label for=\"onceMonth\">თვეში ერთხელ</label>\n                        </div>\n                    </fieldset>\n                    \n                    <h4> კვირაში რამდენი დღე ისურვებდი ოფისიდან მუშაობას?*</h4>\n                    \n                    <fieldset>\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"zero\" \n                                value=\"zero\"\n                            />\n                            <label for=\"zero\">0</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"one\" \n                                value=\"one\"\n                            />\n                            <label for=\"one\">1</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"two\"\n                                value=\"two\"\n                            />\n                            <label for=\"two\">2</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"three\"\n                                value=\"three\"\n                            />\n                            <label for=\"three\">3</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"four\"\n                                value=\"four\"\n                            />\n                            <label for=\"four\">4</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"radioTwo\" \n                                id=\"five\"\n                                value=\"five\"\n                            />\n                            <label for=\"five\">5</label>\n                        </div>\n                    </fieldset>\n                    \n                    <h4> რას ფიქრობ ფიზიკურ შეკრებებზე? </h4>\n                    <textarea></textarea>\n\n                    <h4>რას ფიქრობ არსებულ გარემოზე: რა მოგწონს, \n                        რას დაამატებდი, რას შეცვლიდი?</h4>\n                    <textarea></textarea>\n\n                    <input \n                        type=\"submit\" \n                        className=\"submit\" \n                        value=\"დასრულება\" \n                        onClick={sub}\n                    />\n                </form>\n            </div>\n\n            <div className=\"Recommendation_Image\">\n                <img src=\"images/bike.png\" alt=\"men on bike\" />\n            </div>\n\n        </div>\n            \n    )\n}\n\nexport default Recommendation\n","import React, { useState } from \"react\";\nimport Identification from \"./Identification/Identification\";\nimport AboutCOVID from \"./QuestionnaireOnCOVID/AboutCOVID\";\nimport AboutVaccine from \"./QuestionnaireOnVaccine/AboutVaccine\";\nimport Recommendation from \"./Recommendation/Recommendation\";\n\nconst Pages = ({SetControl}) => {\n    const [ page , setPage ] = useState(1)\n    const [ nextPage , setNextPage ] = useState(false)\n\n    const PageView = () => {\n        if( page === 1) {\n            return <Identification\n            setNextPage ={ setNextPage } />\n        } else if ( page === 2 ) {\n            return <AboutCOVID\n                setNextPage = { setNextPage } />\n        } else if( page === 3 ) {\n            return <AboutVaccine\n                setNextPage = { setNextPage } />\n        } else if( page === 4 ) {\n            return <Recommendation SetControl={SetControl} />\n        }\n    }\n\n    return (\n        <div className=\"Pages\">\n            <header>\n                <h1 className=\"redberry\">REDBERRY</h1>\n                <h1> {page} / 4 </h1>\n            </header>\n\n            <hr className=\"between_Header_Main_Tags\"/>\n\n            { PageView() }\n\n            <footer>\n                {\n                    page > 1 ?\n                        <button\n                            onClick={ () => setPage(page - 1)}\n                        > &lt;</button>\n                        :\n                        \"\"\n                }\n\n                {\n                    page >= 4?\n                        \"\"\n                        :\n                    <button\n                        style = {\n                            nextPage ?\n                                {opacity: 1}\n                                :\n                                {opacity:0.3}\n                        }\n                        onClick={\n                            nextPage ?\n                                () => setPage(page + 1)\n                                :\n                                () => setPage(page)\n                        }\n                        title={ nextPage ?\n                                \"გადადით შემდეგ გვერდზე\"\n                            :\n                                \"გთხოვთ შეავსოთ ზემოთ მოცემული ველები\"\n                        }> &gt; </button>\n                }\n            </footer>\n        </div>\n    );\n};\n\n\nexport default Pages\n","const Finish = () => {\n    return ( \n        <div className=\"finish\">\n            <h1> მადლობა</h1>\n        </div>\n    )\n}\n\n\nexport default Finish\n\n\n\n","import React , {useState} from \"react\"\nimport './App.scss';\nimport StartPage from \"./components/StartPage//StartPage.js\";\nimport Pages from \"./components/Pages/Pages\";\nimport Finish from \"./components/Finish/Finish\";\n\nfunction App() {\n    const [ Control , SetControl ] = useState(\"START\")\n\n    const Control_Disply = () => { \n        if(Control === \"START\") { \n            return <StartPage Control={Control} SetControl={SetControl}/>\n        } else if(Control === \"PAGES\") {\n            return <Pages SetControl={SetControl}/>\n        } else { \n            return <Finish /> \n        }\n    }\n\n    return (\n        <div className=\"App\">\n            { Control_Disply() }\n        </div>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}